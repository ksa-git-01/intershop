services:
  postgres:
    image: postgres:16.9
    container_name: intershop-postgres
    environment:
      # В реальном приложении все креды будут вынесены в env или хранилище секретов,
      # здесь проставлены дефолтные значения только для упрощения локальной сборки и ревью
      POSTGRES_DB: ${POSTGRES_DB:-intershop}
      POSTGRES_USER: ${POSTGRES_USER:-intershop_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-15432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - intershop-network

  redis:
    image: redis:7.4-alpine
    container_name: intershop-redis
    ports:
      - "${REDIS_PORT:-16379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - intershop-network
    command: redis-server --appendonly yes

  store:
    build:
      context: .
      dockerfile: store/Dockerfile
    container_name: intershop-store
    ports:
      - "${STORE_PORT:-18081}:8080"
    depends_on:
      - postgres
      - redis
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-intershop}
      - DB_USER=${POSTGRES_USER:-intershop_user}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - uploads_data:/app/uploads
    networks:
      - intershop-network

  payment:
    build:
      context: .
      dockerfile: payment/Dockerfile
    container_name: intershop-payment
    ports:
      - "${PAYMENT_PORT:-18082}:8080"
    networks:
      - intershop-network

volumes:
  postgres_data:
  uploads_data:
  redis_data:

networks:
  intershop-network:
    driver: bridge